{"version":3,"sources":["components/Preloader/Preloader.js","components/StartPage/StartPage.js","components/ModalWindow/ModalWindow.js","components/CommonTable/CommonTable.js","components/ChoiceButtons/ChoiceButtons.js","components/SortTable/UniversalSortTable.js","components/SortTable/SortTable.js","components/Routes/Routes.js","components/Header/Header.js","components/api/api.js","App.js","reportWebVitals.js","index.js"],"names":["CircularProgressWithLabel","props","Grid","container","justify","item","Box","position","display","m","CircularProgress","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","Math","round","value","Preloader","React","useState","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","StartPage","isLoading","classes","makeStyles","margin","text","textAlign","useStyles","xs","lg","className","boxShadow","bgcolor","p","ModalWindow","addNewWorker","open","setOpen","handleClose","newName","SetNewName","newLastName","SetNewLastName","newDepartment","SetNewDepartment","button","backgroundColor","float","Button","onClick","startIcon","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","onChange","e","target","autoFocus","label","type","fullWidth","DialogActions","departmentName","number","table","minWidth","CommonTable","rows","data","map","firstName","lastName","department","md","sm","TableContainer","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","onSort","bind","field","sort","align","TableBody","row","scope","random","ColorButton","withStyles","theme","root","palette","getContrastText","purple","link","textDecoration","ChoiceButtons","to","COMMON_TABLE","SORT_TABLE","UniversalSortTable","sortField","state","setState","cloneData","sortType","orderedData","_","orderBy","length","fontWeight","SortTable","stateAccounting","stateEconomists","stateIT","stateLeadership","another","filter","push","MAIN","TABLES","Routes","exact","path","render","Header","header","api","axios","get","then","res","floor","catch","console","log","App","newData","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4e0b7a49.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// стандартный preloader из MU\r\nfunction CircularProgressWithLabel(props) {\r\n    return (\r\n        <Grid container justify='center'>\r\n            <Grid item>\r\n                <Box position=\"relative\" display=\"inline-flex\" m={30}>\r\n                    <CircularProgress variant=\"static\" {...props} />\r\n                    <Box\r\n                        top={0}\r\n                        left={0}\r\n                        bottom={0}\r\n                        right={0}\r\n                        position=\"absolute\"\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                    >\r\n                        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n                            props.value,\r\n                        )}%`}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function Preloader() {\r\n    const [progress, setProgress] = React.useState(10);\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\r\n        }, 800);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return <CircularProgressWithLabel value={progress}/>;\r\n}","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\n//стартовая страница приложения\r\nexport const StartPage = ({isLoading}) => {\r\n\r\n    const useStyles = makeStyles({\r\n        margin: {\r\n            margin: '10%',\r\n        },\r\n        text:{\r\n            textAlign: 'center'\r\n        }\r\n    });\r\n\r\n    const classes = useStyles()\r\n\r\n    //preloader при загрузке данных с сервера\r\n    if (isLoading) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} lg={12}>\r\n                <Box display=\"flex\" justifyContent=\"center\" className={classes.margin}>\r\n                    <Box boxShadow={3} bgcolor=\"orange\" p={1} className={classes.margin}>\r\n                        <Typography className={classes.text}>\r\n                            Привет!<br/>\r\n                            Это небольшое приложение, которое позволяет загружать данные пользователей с сервера и\r\n                            фильтровать их по\r\n                            имени и фамилии. Также есть возможность разделить пользователей на группы.\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n// модальное окно по добавлению нового человека\r\nexport function ModalWindow({addNewWorker}) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [newName, SetNewName] = useState('');\r\n    const [newLastName, SetNewLastName] = useState('');\r\n    const [newDepartment, SetNewDepartment] = useState('');\r\n\r\n\r\n    const useStyles = makeStyles({\r\n        button: {\r\n            color: 'black',\r\n            backgroundColor: '#FFEECC',\r\n            margin: '15px',\r\n            float: \"left\"\r\n        }\r\n    });\r\n\r\n// функция, отправляющая в компоненту App данные о новом человеке\r\n    const setNewWorker = () => {\r\n        if (newName !== \"\" && newLastName !== \"\") {\r\n            addNewWorker({newName, newLastName, newDepartment})\r\n            SetNewName('')\r\n            SetNewLastName('')\r\n            SetNewDepartment('')\r\n        } else {\r\n            setOpen(true);\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen} startIcon={<AccessibilityNewIcon/>}\r\n                    className={classes.button}>\r\n                Добавить\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Введите данные:</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        onChange={(e) => SetNewName(e.target.value)}\r\n                        value={newName}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Имя\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        onChange={e => SetNewLastName(e.target.value)}\r\n                        value={newLastName}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"lastName\"\r\n                        label=\"Фамилия\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        onChange={e => SetNewDepartment(e.target.value)}\r\n                        value={newDepartment}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"department\"\r\n                        label=\"Отдел\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Закрыть\r\n                    </Button>\r\n                    <Button onClick={() => {\r\n                        handleClose();\r\n                        setNewWorker()\r\n                    }} color=\"primary\">\r\n                        Добавить\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {ModalWindow} from \"../ModalWindow/ModalWindow\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// функция, определяющая назваине отдела на основании входящего номера от 1 до 3\r\nconst departmentName = (number) => {\r\n    switch (number) {\r\n        case 0:\r\n            return 'Accounting'\r\n        case 1:\r\n            return 'Economists'\r\n        case 2:\r\n            return 'IT'\r\n        case 3:\r\n            return 'Leadership'\r\n        default:\r\n            return 'Another'\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 280,\r\n    }\r\n});\r\n\r\n// функция по отрисовке общего списка пользователей\r\nexport function CommonTable(props) {\r\n    function createData(id, firstName, lastName, department) {\r\n        return {id, firstName, lastName, department};\r\n    }\r\n\r\n    const rows = props.data.map(item => {\r\n        return createData(item.id, item.firstName, item.lastName, item.department)\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n// preloader если грузятся данные с сервера\r\n    if (props.isLoading) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid item lg={11} md={11} sm={12}>\r\n                <ModalWindow addNewWorker={props.addNewWorker}/>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell\r\n                                    onClick={props.onSort.bind(null, \"firstName\")}>Имя {props.field === \"firstName\" ?\r\n                                    <small>{props.sort}</small> : null}</TableCell>\r\n                                <TableCell align=\"center\"\r\n                                           onClick={props.onSort.bind(null, \"lastName\")}>Фамилия {props.field === \"lastName\" ?\r\n                                    <small>{props.sort}</small> : null}</TableCell>\r\n                                <TableCell align=\"center\">Отдел</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.id + Math.random()}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.firstName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">{row.lastName}</TableCell>\r\n                                    <TableCell align=\"center\">{departmentName(row.department)}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport purple from \"@material-ui/core/colors/purple\";\r\nimport React from \"react\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport {COMMON_TABLE, SORT_TABLE} from \"../Routes/Routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(purple[500]),\r\n        backgroundColor: purple[500],\r\n        '&:hover': {\r\n            backgroundColor: purple[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    position: {\r\n        textAlign: 'center'\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    }\r\n}));\r\n\r\n// компонент с 2 кнопками для выбора варианта загрузки списка пользователей\r\nexport const ChoiceButtons = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container justify='center'>\r\n            <Grid item lg={8} md={10}>\r\n                <Box boxShadow={3} p={2} m={5} bgcolor='#FFEECC'>\r\n                    <Box p={2} className={classes.position}>\r\n                        Общая таблица с пользователями\r\n                    </Box>\r\n                    <Box className={classes.position}>\r\n                        <NavLink to={COMMON_TABLE} className={classes.link}>\r\n                            <ColorButton variant=\"contained\"\r\n                                         startIcon={<CloudUploadIcon/>}\r\n                                         color=\"primary\" size=\"large\"\r\n                                         className={classes.margin}\r\n                            >\r\n                                Показать\r\n                            </ColorButton>\r\n                        </NavLink>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n\r\n            <Grid item lg={8} md={10}>\r\n                <Box boxShadow={3} m={5} p={2} bgcolor='#FFEECC'>\r\n                    <Box p={2} className={classes.position}>\r\n                        Таблица с сортировкой по группам\r\n                    </Box>\r\n                    <Box className={classes.position}>\r\n                        <NavLink to={SORT_TABLE} className={classes.link}>\r\n                            <ColorButton variant=\"contained\"\r\n                                         startIcon={<CloudUploadIcon/>}\r\n                                         color=\"primary\" size=\"large\"\r\n                                         className={classes.margin}>\r\n                                Показать\r\n                            </ColorButton>\r\n                        </NavLink>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport _ from \"lodash\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\n\r\nexport function UniversalSortTable (props) {\r\n\r\n    const [state, setState] = useState({\r\n        data: props.data ,\r\n        sort:'',\r\n        sortField: 'firstName'\r\n    })\r\n\r\n   // для сортировки использую библиотеку lodash\r\n    const onSort = (sortField) => {\r\n        const cloneData = [...state.data];\r\n        const sortType = state.sort === 'asc' ? 'desc' : 'asc';\r\n        const orderedData = _.orderBy(cloneData, sortField, sortType);\r\n        setState({...state,\r\n            data: orderedData,\r\n            sort: sortType,\r\n            sortField\r\n        })\r\n    }\r\n\r\n    useEffect(()=>setState({...state, data: props.data}),[props.data])\r\n\r\n    const rows = state.data.map((item => createData(item.id, item.firstName, item.lastName)))\r\n    function createData(id, firstName, lastName) {\r\n        return {id, firstName, lastName};\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        table: {\r\n            minWidth: 280,\r\n        },\r\n    });\r\n    const classes = useStyles();\r\n\r\n\r\n    // при отсутствии данных таблица не отражается\r\n    if (props.data.length === 0){\r\n        return null\r\n    }\r\n    // preloader если данные грузятся с сервера\r\n    if (props.isLoading || state.data.length === 0){\r\n        return <Preloader/>\r\n    }\r\n\r\n    // таблица сотрудников отдела\r\n    return (\r\n        <TableContainer component={Paper} >\r\n            <Box fontWeight=\"fontWeightBold\" p={2}  align=\"center\" >\r\n                {props.department}\r\n            </Box>\r\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\" onClick={()=>onSort('firstName')} >Имя {state.sortField === 'firstName' ?\r\n                            <small>{state.sort}</small> : null}</TableCell>\r\n                        <TableCell align=\"center\" onClick={()=>onSort('lastName')}>Фамилия {state.sortField === 'lastName' ?\r\n                            <small>{state.sort}</small> : null}</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.id + Math.random()}>\r\n                            <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                {row.firstName}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">{row.lastName}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport {UniversalSortTable} from \"./UniversalSortTable\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nexport function SortTable({data,isLoading}) {\r\n\r\n    // создаем пустые массивы для каждого отдела\r\n    let stateAccounting = []\r\n    let stateEconomists = []\r\n    let stateIT = []\r\n    let stateLeadership = []\r\n    let another = []\r\n\r\n    //фильтруем общий массив на отделы, чтобы потом передать в каждую таблицу\r\n        data.filter(item => {\r\n            if (item.department === 0) {\r\n                return (stateAccounting.push(item))\r\n            } else if (item.department === 1) {\r\n                return stateEconomists.push(item)\r\n            } else if (item.department === 2) {\r\n                stateIT.push(item)\r\n            } else if (item.department === 3) {\r\n                stateLeadership.push(item)\r\n            } else\r\n                return another.push(item)\r\n        })\r\n\r\n    return (\r\n        <Grid container justify='center'>\r\n            <Grid item lg={11} sm={10} xs={12} >\r\n                <UniversalSortTable isLoading={isLoading} data={another} department={'Another'}/>\r\n                <br/>\r\n                <UniversalSortTable isLoading={isLoading} data={stateAccounting} department={'Accounting'}/>\r\n                <br/>\r\n                <UniversalSortTable isLoading={isLoading}  data={stateEconomists} department={'Economists'}/>\r\n                <br/>\r\n                <UniversalSortTable isLoading={isLoading} data={stateIT} department={'IT'}/>\r\n                <br/>\r\n                <UniversalSortTable isLoading={isLoading} data={stateLeadership} department={'Leadership'}/>\r\n                <br/>\r\n            </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport {StartPage} from \"../StartPage/StartPage\";\r\nimport {CommonTable} from \"../CommonTable/CommonTable\";\r\nimport {ChoiceButtons} from \"../ChoiceButtons/ChoiceButtons\";\r\nimport {SortTable} from \"../SortTable/SortTable\";\r\n\r\n\r\nexport const MAIN = '/main'\r\nexport const TABLES = '/tables'\r\nexport const COMMON_TABLE = '/common_table'\r\nexport const SORT_TABLE = '/sort_table'\r\n\r\n\r\nexport const Routes = (props) => {\r\n    return (\r\n        <div>\r\n            <Route exact path='/' render={() => <Redirect to={MAIN}/>}/>\r\n            <Route path={MAIN} render={() => <StartPage isLoading={props.isLoading}/>}/>\r\n            <Route path={TABLES} render={() => <ChoiceButtons/>}/>\r\n            <Route path={COMMON_TABLE} render={() => <CommonTable isLoading={props.isLoading} data = {props.data} onSort = {props.onSort} sort = {props.sort} field = {props.sortField} addNewWorker={props.addNewWorker} />}/>\r\n            <Route path={SORT_TABLE} render={() => <SortTable isLoading={props.isLoading}  data = {props.data}/>}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {MAIN, TABLES} from \"../Routes/Routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n// \"шапка\" приложения с 2 кнопками навигации\r\nexport function Header() {\r\n    const useStyles = makeStyles({\r\n        header: {\r\n            textDecoration: \"none\"\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" p={2} bgcolor=\"#4791db\" justifyContent=\"space-around\">\r\n                <NavLink to={MAIN} className={classes.header}> <Button variant=\"contained\"> Главная </Button></NavLink>\r\n                <NavLink to={TABLES} className={classes.header}><Button variant=\"contained\"> Таблицы </Button></NavLink>\r\n            </Box>\r\n        </div>\r\n    );\r\n}","import axios from 'axios';\r\n\r\nexport const api ={\r\n loadStuff () {\r\n     // запрос за рандомным списком пользователей (есть имя, фамилия, но нет отдела)\r\n     return axios.get('http://www.filltext.com/?rows=400&id={number|1000}&firstName={firstName}&lastName={lastName}}')\r\n         .then(res => res.data)\r\n         // каждому элементу добавляем ключ department со сзачением от 0 до 3, где каждой цифре соответствует название отдела\r\n         .then(data => data.map(item => item = {...item, department:Math.floor(Math.random() * (4))}))\r\n         .catch((e) =>{ console.log(e)})\r\n}}\r\n\r\n\r\n\r\n","import React from \"react\";\nimport {Header} from \"./components/Header/Header\";\nimport {Routes} from \"./components/Routes/Routes\";\nimport _ from 'lodash';\nimport {api} from \"./components/api/api\";\n\n\nclass App extends React.Component {\n\n    state = {\n        data: [],\n        sort: '',\n        sortField: 'firstName',\n        isLoading: true\n    }\n\n    // после монтирования компоненты загружаем данные с сервера\n    componentDidMount() {\n        api.loadStuff()\n            .then(newData => this.setState({...this.state, data: newData, isLoading: false}))\n    }\n\n    // для сортировки использую библиотеку lodash\n    onSort = (sortField) => {\n        const cloneData = [...this.state.data];\n        const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\n        const orderedData = _.orderBy(cloneData, sortField, sortType);\n        this.setState({\n            data: orderedData,\n            sort: sortType,\n            sortField\n        })\n    }\n\n    // добавление нового пользовтаелся в state\n    addNewWorker = (data) => {\n        switch (data.newDepartment) {\n            case 'Accounting':\n                return this.setState({\n                    ...this.state,\n                    data: [{\n                        id: Math.random(),\n                        firstName: data.newName,\n                        lastName: data.newLastName,\n                        department: 0\n                    }, ...this.state.data]\n                })\n            case 'Economists':\n                return this.setState({\n                    ...this.state,\n                    data: [{\n                        id: Math.random(),\n                        firstName: data.newName,\n                        lastName: data.newLastName,\n                        department: 1\n                    }, ...this.state.data]\n                })\n            case 'IT':\n                return this.setState({\n                    ...this.state,\n                    data: [{\n                        id: Math.random(),\n                        firstName: data.newName,\n                        lastName: data.newLastName,\n                        department: 2\n                    }, ...this.state.data]\n                })\n            case 'Leadership':\n                return this.setState({\n                    ...this.state,\n                    data: [{\n                        id: Math.random(),\n                        firstName: data.newName,\n                        lastName: data.newLastName,\n                        department: 3\n                    }, ...this.state.data]\n                })\n            default:\n                return this.setState({\n                    ...this.state,\n                    data: [{\n                        id: Math.random(),\n                        firstName: data.newName,\n                        lastName: data.newLastName,\n                        department: data.newDepartment\n                    }, ...this.state.data]\n                })\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"App\">\n                    <Header/>\n                    <Routes data={this.state.data} isLoading={this.state.isLoading} onSort={this.onSort}\n                            sort={this.state.sort} sortField={this.state.sortField} addNewWorker={this.addNewWorker}/>\n                </div>\n        );\n    }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        {/*<React.StrictMode>*/}\n            <App/>\n        {/*</React.StrictMode>*/}\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}